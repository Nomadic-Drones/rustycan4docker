version: '3.8'

services:
  # Optional: Healthcheck service to verify CAN network is ready
  # This ensures the CAN interface exists before starting the main app
  canbus-ready:
    image: alpine:latest
    networks:
      - canbus0
    healthcheck:
      test: ["CMD", "sh", "-c", "ip link show can0 2>/dev/null || exit 1"]
      interval: 2s
      timeout: 5s
      retries: 10
      start_period: 5s
    command: ["sh", "-c", "echo 'CAN network ready' && sleep infinity"]
    restart: "no"

  # Test container 1 - Uses CAN network
  can-test-1:
    image: alpine:latest
    container_name: can-test-1
    networks:
      - canbus0
    depends_on:
      canbus-ready:
        condition: service_healthy
        restart: true
    command: |
      sh -c '
        echo "Container 1 started"
        echo "CAN interface status:"
        ip link show can0 || echo "CAN interface not found!"
        echo "Keeping container alive..."
        sleep infinity
      '
    restart: unless-stopped

  # Test container 2 - Also uses CAN network
  # This tests multi-container CAN networking
  can-test-2:
    image: alpine:latest
    container_name: can-test-2
    networks:
      - canbus0
    depends_on:
      canbus-ready:
        condition: service_healthy
        restart: true
    command: |
      sh -c '
        echo "Container 2 started"
        echo "CAN interface status:"
        ip link show can0 || echo "CAN interface not found!"
        echo "Keeping container alive..."
        sleep infinity
      '
    restart: unless-stopped

networks:
  canbus0:
    driver: nomadicdrones/rustycan4docker:latest
    driver_opts:
      vxcan.dev: can
      vxcan.peer: can
      vxcan.id: 0

